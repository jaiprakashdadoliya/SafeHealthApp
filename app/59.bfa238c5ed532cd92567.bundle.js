(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{1959:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ClinicalNotes=void 0;var i,a=n(1),o=(i=a)&&i.__esModule?i:{default:i},r=(n(66),n(43)),l=n(8),s=(n(80),n(802));t.ClinicalNotes=function(e){return o.default.createElement("div",null,o.default.createElement("div",{className:"clearfix"}),o.default.createElement("h3",null,"Clinical Notes"),o.default.createElement("div",{className:"row"},o.default.createElement("div",{className:"col-md-12"},e.errorMsg&&!e.isInsertDone&&o.default.createElement(r.Alert,{bsStyle:"danger"},e.errorMsg),e.isUpdateDone&&e.successMessage&&o.default.createElement(r.Alert,{bsStyle:"success"},e.successMessage)),o.default.createElement("div",{className:"col-md-6"},e.user_type==l.configConstants.USER_TYPE_DOCTOR&&o.default.createElement("div",{className:"row"},o.default.createElement(s.FxForm,{config:e.formConfig,ref:function(t){e.handleBoundFormUpdate(t)}}),o.default.createElement("div",{className:"col-md-12 text-right"},o.default.createElement(r.Button,{className:"btn text-btn green",onClick:e.submitClinicalNotesData},"Save"))),e.user_type==l.configConstants.USER_TYPE_PATIENT&&o.default.createElement("div",{className:"row"},o.default.createElement("ul",null,e.isClinicalDataFetched&&void 0!=e.clinicalNotesList?e.clinicalNotesList.clinical_notes.map(function(e,t){return o.default.createElement("li",{key:t},o.default.createElement("h5",null,e.text))}):o.default.createElement("div",null,o.default.createElement("h5",null," Clinical note not found.")))))))}},2672:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(1959);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var a=n(2673);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})})},2673:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ClinicalNotesContainer=void 0;var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=f(n(1)),o=n(36),r=f(n(296)),l=n(66),s=n(879),c=n(10),u=(n(54),n(803),f(n(2674))),d=n(8);function f(e){return e&&e.__esModule?e:{default:e}}var p=(0,r.default)({loader:function(){return Promise.resolve().then(n.t.bind(null,1959,7)).then(function(e){return e.ClinicalNotes})},loading:l.Loading}),m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.submitClinicalNotesData=n.submitClinicalNotesData.bind(n),n.handleBoundFormUpdate=n.handleBoundFormUpdate.bind(n),n.isReload=!0,n.state={formConfig:u.default,pages:0,filtered:[],filterAll:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),i(t,[{key:"componentWillMount",value:function(){var e=this.props,t=e.dispatch,n=e.visitId,i=e.patId;n&&i&&t(s.clinicalNotesActions.getClinicalNotesList(n,i))}},{key:"componentWillReceiveProps",value:function(e){var t=this.props,n=t.dispatch,i=t.visitId,a=t.patId,o=(this.state.formConfig.data,this.state.formConfig.fields),r=[];if(e.user_type==d.configConstants.USER_TYPE_DOCTOR)if(this.isReload&&""!=e.clinicalNotesList&&null!=e.clinicalNotesList){for(var l in o){var c=o[l].name;"tags"==o[l].type?(o[l].value=e.clinicalNotesList[c],r=o[l].value):o[l].value=e.clinicalNotesList[c]}this.boundForm.setFieldData({clinical_notes:r}),this.isReload=!1}else{for(var l in r=[],o){c=o[l].name;"tags"==o[l].type&&(o[l].value=[],r=[])}this.boundForm.setFieldData({clinical_notes:r})}e.isUpdateDone&&i&&a&&setTimeout(function(){n(s.clinicalNotesActions.getClinicalNotesList(i,a)),n(s.clinicalNotesActions.resetState()),this.isReload=!0}.bind(this),2e3)}},{key:"handleBoundFormUpdate",value:function(e){this.boundForm=e}},{key:"submitClinicalNotesData",value:function(){var e=this.props,t=e.dispatch,n=e.patId,i=e.visitId,a=this.boundForm.getData(),o={};o.pat_id=n,o.visit_id=i;var r=c.utilityHelper.mergeMultipleObject([a,o]);t(s.clinicalNotesActions.clinicalNotesSubmit(r))}},{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement(p,{user_type:this.props.user_type,successMessage:this.props.successMessage,errorMsg:this.props.errorMsg,isUpdateDone:this.props.isUpdateDone,handleBoundFormUpdate:this.handleBoundFormUpdate,submitClinicalNotesData:this.submitClinicalNotesData,formConfig:this.state.formConfig,clinicalNotesList:this.props.clinicalNotesList,isClinicalDataFetched:this.props.isClinicalDataFetched}))}}]),t}();var C=(0,o.connect)(function(e){var t=e.clinicalNotes,n=(t.sendingRequest,t.successMessage),i=t.errorMsg,a=(t.isUserNotValid,t.isUpdateDone),o=t.isClinicalDataFetched;return t.clinicalNotesData,{successMessage:n,errorMsg:i,clinicalNotesList:t.clinicalNotesList,isUpdateDone:a,user_type:e.session.user.user_type,isClinicalDataFetched:o}})(m);t.ClinicalNotesContainer=C},2674:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={fields:[{name:"clinical_notes",title:"",value:[],type:"tags",showOnForm:!0,placeholder:"Clinical notes separated by press enter or comma",cssClasses:{inputParentClass:"col-md-12",labelClass:"control-label",inputContainerClass:""},validations:[{isRequired:!0,msg:"This field is required."}]}],data:{clinical_notes_data:[]},handlers:{}}},803:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i,a,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();t.confirmAlert=function(e){(function(){var e="http://www.w3.org/2000/svg",t=document.createElementNS(e,"feGaussianBlur");t.setAttribute("stdDeviation","0.7");var n=document.createElementNS(e,"filter");n.setAttribute("id","gaussian-blur"),n.appendChild(t);var i=document.createElementNS(e,"svg");i.setAttribute("id","react-confirm-alert-firm-svg"),i.setAttribute("class","react-confirm-alert-svg"),i.appendChild(n),document.body.appendChild(i)})(),function(e){document.body.children[0].classList.add("react-confirm-alert-blur");var t=document.createElement("div");t.id="react-confirm-alert",document.body.appendChild(t),(0,c.render)(l.default.createElement(f,e),t)}(e)};var r=n(1),l=u(r),s=u(n(0)),c=n(13);function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var f=(a=i=function(e){function t(){var e,n,i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var a=arguments.length,o=Array(a),r=0;r<a;r++)o[r]=arguments[r];return n=i=d(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),i.handleClickButton=function(e){e.onClick&&e.onClick(),i.close()},i.close=function(){var e,t;e=document.getElementById("react-confirm-alert"),(0,c.unmountComponentAtNode)(e),e.parentNode.removeChild(e),(t=document.getElementById("react-confirm-alert-firm-svg")).parentNode.removeChild(t),document.body.children[0].classList.remove("react-confirm-alert-blur")},i.componentWillUnmount=function(){i.props.willUnmount()},i.renderCustomUI=function(){var e=i.props,t=e.title,n=e.message;return(0,e.customUI)({title:t,message:n,onClose:i.close})},d(i,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.Component),o(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.title,i=t.message,a=t.buttons,o=t.childrenElement,r=t.customUI;return l.default.createElement("div",{className:"react-confirm-alert-overlay"},l.default.createElement("div",{className:"react-confirm-alert"},r?this.renderCustomUI():l.default.createElement("div",{className:"react-confirm-alert-body"},n&&l.default.createElement("h1",null,n),i,o(),l.default.createElement("div",{className:"react-confirm-alert-button-group"},a.map(function(t,n){return l.default.createElement("button",{key:n,onClick:function(){return e.handleClickButton(t)}},t.label)})))))}}]),t}(),i.propTypes={title:s.default.string,message:s.default.string,buttons:s.default.array.isRequired,childrenElement:s.default.func,customUI:s.default.func,willUnmount:s.default.func},i.defaultProps={buttons:[{label:"Cancel",onClick:function(){return null}},{label:"Confirm",onClick:function(){return null}}],childrenElement:function(){return null},willUnmount:function(){return null}},a);t.default=f},879:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clinicalNotesActions=void 0;var i=n(8),a=n(310),o=n(880);n(10),t.clinicalNotesActions={getClinicalNotesList:function(e,t){return function(r){r({type:a.clinicalNotesConstants.CLINICAL_NOTES_LIST_DATA_REQUEST}),o.clinicalNotesService.getClinicalNotesRequest(e,t).then(function(e){var t,o,l=e.data;l.code==i.configConstants.SUCCESS_CODE?r((o=l.result,{type:a.clinicalNotesConstants.CLINICAL_NOTES_LIST_DATA_SUCCESS,result:o})):l.code==i.configConstants.ERROR_CODE?r(n(l.message)):l.code==i.configConstants.EXCEPTION_CODE?r(n(l.message)):l.code==i.configConstants.UNAUTHENTICATE_CODE?r((t=l.message,{type:i.configConstants.UNAUTHENTICATE,error:t})):r(n(e))}).catch(function(e){r(n(e.message))})};function n(e){return{type:a.clinicalNotesConstants.CLINICAL_NOTES_LIST_DATA_FAILURE,errorMsg:e}}},clinicalNotesSubmit:function(e){return function(n){n({type:a.clinicalNotesConstants.CLINICAL_NOTES_EDIT_REQUEST}),o.clinicalNotesService.doClinicalNotesInsertUpdate(e).then(function(e){var o,r,l=e.data;if(l.code==i.configConstants.SUCCESS_CODE){var s=l.message;n((r=s,{type:a.clinicalNotesConstants.CLINICAL_NOTES_EDIT_SUCCESS,result:r}))}else if(l.code==i.configConstants.ERROR_CODE){var c=l;n(t(c))}else if(l.code==i.configConstants.EXCEPTION_CODE){var c=l.message;n(t(c))}else if(l.code==i.configConstants.UNAUTHENTICATE_CODE){var c=l.message;n((o=c,{type:i.configConstants.UNAUTHENTICATE,error:o}))}else n(t(e))}).catch(function(e){n(t(e.message))})};function t(e){return{type:a.clinicalNotesConstants.CLINICAL_NOTES_EDIT_FAILURE,error:e}}},resetState:function(){return function(e){e({type:a.clinicalNotesConstants.CLINICAL_NOTES_RESET_STATE})}}}},880:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clinicalNotesService=void 0;var i,a=n(15),o=(i=a)&&i.__esModule?i:{default:i},r=n(8),l=n(10);t.clinicalNotesService={getClinicalNotesRequest:function(e,t){var n={visit_id:e,pat_id:t};return(0,o.default)({method:"post",url:r.configConstants.API_BASE_PATH+"visit/clinical-notes/get-clinical-notes-list",data:l.headerHelper.appendUserDataInJson(n),headers:l.headerHelper.getHeaderWithAuthorization()}).then(function(e){return e}).catch(function(e){var t=l.utilityHelper.catchServiceErrorHandel(e);return t})},doClinicalNotesInsertUpdate:function(e){return(0,o.default)({method:"post",url:r.configConstants.API_BASE_PATH+"visit/clinical-notes/add-edit",data:l.headerHelper.appendUserDataInJson(e),headers:l.headerHelper.getHeaderWithAuthorization()}).then(function(e){return e}).catch(function(e){var t=l.utilityHelper.catchServiceErrorHandel(e);return t})}}}}]);